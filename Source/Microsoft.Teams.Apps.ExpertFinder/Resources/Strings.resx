<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutMePlaceHolderText" xml:space="preserve">
    <value>情報を入力してください (最大 300 文字)</value>
    <comment>[プロファイルの編集] アダプティブ カードの [自己紹介] 入力フィールドのゴースト テキスト</comment>
  </data>
  <data name="AboutMeTitle" xml:space="preserve">
    <value>自己紹介</value>
    <comment>[自己紹介] 属性の [マイ プロファイル] アダプティブ カードで使用される入力フィールド ラベル</comment>
  </data>
  <data name="ChatTitle" xml:space="preserve">
    <value>チャットを開始する</value>
    <comment>検索機能から選択されたユーザーとのチャットを開始するボタンのテキスト</comment>
  </data>
  <data name="DefaultCardContentME" xml:space="preserve">
    <value>キーワードを入力して、プロファイルにその情報を持つユーザーを検索します。</value>
    <comment>メッセージング拡張機能の規定値として表示するテキスト</comment>
  </data>
  <data name="DetailsTitle" xml:space="preserve">
    <value>もっと見る</value>
    <comment>CTA ユーザー カードの詳細を示すカード ボタンのテキスト</comment>
  </data>
  <data name="EditProfileTitle" xml:space="preserve">
    <value>プロファイルの編集</value>
    <comment>[マイ プロファイル] アダプティブ カードから [プロファイルの編集] ダイアログを呼び出すボタンのテキスト</comment>
  </data>
  <data name="EmptyProfileCardContent" xml:space="preserve">
    <value>自身のプロファイルを更新して、あなたのことを同僚に知らせてください。</value>
    <comment>空のプロファイル カードに表示するテキスト</comment>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>問題が発生しました。数分後にもう一度お試しください。</value>
    <comment>一般的なエラー メッセージ</comment>
  </data>
  <data name="FailedToUpdateProfile" xml:space="preserve">
    <value>問題が発生したため、プロファイルを更新できませんでした。数分後にもう一度お試しください。</value>
    <comment>ユーザー プロファイル APIの更新に失敗したときのエラー メッセージのテキスト</comment>
  </data>
  <data name="ForbiddenErrorMessage" xml:space="preserve">
    <value>このページにアクセスする権限がありません。</value>
    <comment>ユーザーが要求されたリソースを表示する権限を持っていない場合のエラー メッセージ</comment>
  </data>
  <data name="FullNameTitle" xml:space="preserve">
    <value>名前</value>
    <comment>[名前] 属性の [マイ プロファイル] アダプティブ カードで使用される入力フィールド ラベル</comment>
  </data>
  <data name="GeneralErrorMessage" xml:space="preserve">
    <value>予期しないエラーが発生しました。ページを更新してください。問題が解決しない場合は、管理者にお問い合わせください。</value>
    <comment>予期しないことが起きた場合のエラー メッセージ</comment>
  </data>
  <data name="GotoProfileTitle" xml:space="preserve">
    <value>プロファイルへ移動</value>
    <comment>ユーザーがAAD ユーザー プロファイル Web ページに移動できるようにするボタンのテキスト</comment>
  </data>
  <data name="HelpMessage" xml:space="preserve">
    <value>組織内で特定の専門知識と技能を持つユーザーを検索できます。できることは次のとおりです。</value>
    <comment>ヘルプ カードに表示するテキスト</comment>
  </data>
  <data name="InitialSearchResultMessageBodyText" xml:space="preserve">
    <value>ヒント : 技能 (「データ ビジュアライゼーション」など) 、興味 (「ハイキング」) 、学歴を入力して、プロファイルにその情報を持つ人々を見つけます。</value>
    <comment>エキスパート検索タスク モジュールにおけるユーザーのための示唆テキスト</comment>
  </data>
  <data name="InitialSearchResultMessageHeaderText" xml:space="preserve">
    <value>次のことができます。</value>
    <comment>エキスパート検索タスク モジュールにおける初回検索時のヘッダーの示唆テキスト</comment>
  </data>
  <data name="InterestsPlaceHolderText" xml:space="preserve">
    <value>情報を入力してください (最大 100 文字)</value>
    <comment>[プロファイルの編集] アダプティブ カードの [興味] 入力フィールドのゴースト テキスト</comment>
  </data>
  <data name="InterestTitle" xml:space="preserve">
    <value>興味</value>
    <comment>[興味] 属性の [マイ プロファイル] アダプティブ カードで使用される入力フィールド ラベル</comment>
  </data>
  <data name="InvalidTenant" xml:space="preserve">
    <value>あなたのアカウントはこの組織に所属していません。</value>
    <comment>テナント ID が承認済みテナントと一致しない場合に表示されるメッセージ</comment>
  </data>
  <data name="LoginSuccessText" xml:space="preserve">
    <value>サインインに成功しました。</value>
    <comment>サインインが成功したときに表示するテキスト</comment>
  </data>
  <data name="MaxUserProfilesError" xml:space="preserve">
    <value>最大 5 つのユーザー プロファイルを選択できます。</value>
    <comment>ユーザーがエキスパート検索タスク モジュールで検索結果から 5 つ以上のユーザー プロファイルを選択すると表示されるエラーメッセージ</comment>
  </data>
  <data name="MyProfileTitle" xml:space="preserve">
    <value>マイ プロファイル</value>
    <comment>ウェルカム カードとヘルプ カードに表示される [マイプロファイル] ボタンのテキスト</comment>
  </data>
  <data name="MyProfileWelcomeCardContent" xml:space="preserve">
    <value>プロファイルが他の人にどのように見えるかを確認します。技能、興味、学歴でプロファイルを更新します。</value>
    <comment>[マイ プロファイル] コマンドのウェルカム カード テキスト</comment>
  </data>
  <data name="NoneText" xml:space="preserve">
    <value>なし</value>
    <comment>ユーザー プロファイル カードでユーザー属性のいずれかが空の場合に表示される既定のテキスト</comment>
  </data>
  <data name="NotLoggedInText" xml:space="preserve">
    <value>ユーザーを検索するには、サインインする必要があります。</value>
    <comment>ユーザーがサインインしていない場合に表示するテキスト</comment>
  </data>
  <data name="RefreshLinkText" xml:space="preserve">
    <value>更新</value>
    <comment>エラー ページに表示されるリンク テキストを更新するテキスト</comment>
  </data>
  <data name="SchoolsPlaceHolderText" xml:space="preserve">
    <value>情報を入力してください (最大 200 文字)</value>
    <comment>[プロファイルの編集] アダプティブ カードの [学歴] 入力フィールドのゴースト テキスト</comment>
  </data>
  <data name="SchoolsTitle" xml:space="preserve">
    <value>学歴</value>
    <comment>[学歴] 属性の [マイプロファイル] アダプティブ カードで使用される入力フィールド ラベル</comment>
  </data>
  <data name="SearchCardContent" xml:space="preserve">
    <value>[検索] をクリックして、技能、興味、学歴でユーザーをフィルタリングします。</value>
    <comment>検索ダイアログ タスク モジュールを呼び出すカード上の示唆テキスト</comment>
  </data>
  <data name="SearchResultNoItemsText" xml:space="preserve">
    <value>結果が見つかりませんでした。別のキーワードをお試しください。</value>
    <comment>エキスパート検索タスク モジュールにおける検索結果が 0 件の場合に表示されるメッセージ</comment>
  </data>
  <data name="SearchTaskModuleTitle" xml:space="preserve">
    <value>ユーザーを検索</value>
    <comment>ユーザーが組織内の専門家を検索できるタスク モジュールのタイトル</comment>
  </data>
  <data name="SearchTextBoxPlaceholder" xml:space="preserve">
    <value>検索する用語を入力してください</value>
    <comment>エキスパート検索タスク モジュールの検索ボックスのゴースト テキスト</comment>
  </data>
  <data name="SearchTitle" xml:space="preserve">
    <value>検索</value>
    <comment>ウェルカム カード、ヘルプ カード、検索カードに表示する検索ボタンのテキスト</comment>
  </data>
  <data name="SearchWelcomeCardContent" xml:space="preserve">
    <value>技能、興味、学歴でユーザーをフィルタリングします。</value>
    <comment>検索コマンドのウェルカム カード テキスト</comment>
  </data>
  <data name="SignInButtonText" xml:space="preserve">
    <value>サインイン</value>
    <comment>サインイン カードの [サインイン] ボタンに表示するテキスト</comment>
  </data>
  <data name="SignInCardText" xml:space="preserve">
    <value>ユーザーを検索するには、サインインする必要があります。</value>
    <comment>サインイン カードに表示するテキスト</comment>
  </data>
  <data name="SignOutCommandText" xml:space="preserve">
    <value>SIGNOUT;LOGOUT;SIGN OUT;LOG OUT;サインアウト;ログアウト</value>
    <comment>ユーザーがサインアウトするためのコマンド テキスト (セミコロン区切り)</comment>
  </data>
  <data name="SignOutText" xml:space="preserve">
    <value>サインアウトしました。</value>
    <comment>ユーザーがサインアウトしたときに表示するテキスト</comment>
  </data>
  <data name="SkillsPlaceHolderText" xml:space="preserve">
    <value>情報を入力してください (最大 100 文字)</value>
    <comment>[プロファイルの編集] アダプティブ カードの [技能] 入力フィールドのゴースト テキスト</comment>
  </data>
  <data name="SkillsTitle" xml:space="preserve">
    <value>技能</value>
    <comment>[技能] 属性の [マイ プロファイル] アダプティブ カードで使用される入力フィールド ラベル</comment>
  </data>
  <data name="UnauthorizedErrorMessage" xml:space="preserve">
    <value>このサービスへのアクセス中にエラーが発生しました。</value>
    <comment>ユーザーが API へのアクセスを許可されていない場合のエラー メッセージ</comment>
  </data>
  <data name="UpdateTitle" xml:space="preserve">
    <value>更新</value>
    <comment>[マイ プロファイル] アダプティブ カードの送信アクション ボタンのテキスト</comment>
  </data>
  <data name="ValidationTaskModuleMessage" xml:space="preserve">
    <value>各項目の間にはセミコロンを使用します。</value>
    <comment>[マイ プロファイル] アダプティブ カードに表示される、複数の値をサポートする入力フィールドの検証テキスト</comment>
  </data>
  <data name="ViewButtonText" xml:space="preserve">
    <value>表示</value>
    <comment>エキスパート検索タスク モジュールにおける、選択されたユーザー プロファイルを表示するボタンのテキスト</comment>
  </data>
  <data name="WelcomeCardContent" xml:space="preserve">
    <value>組織内で特定の専門知識と技能を持つ人物を検索できます。プロファイルにその情報があれば見つけることができます。できることは次のとおりです。</value>
    <comment>ウェルカム カードに表示するテキスト</comment>
  </data>
  <data name="WelcomeText" xml:space="preserve">
    <value>ようこそ !</value>
    <comment>ウェルカム カードのヘッダー テキスト</comment>
  </data>
</root>